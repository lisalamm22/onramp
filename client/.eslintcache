[{"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/index.tsx":"1","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/App.tsx":"2","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/login.tsx":"3","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/home.tsx":"4","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/register.tsx":"5","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/gallery.tsx":"6","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search.tsx":"7","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/modal.tsx":"8","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/edit_modal.tsx":"9"},{"size":506,"mtime":1610225006095,"results":"10","hashOfConfig":"11"},{"size":1565,"mtime":1610386614886,"results":"12","hashOfConfig":"11"},{"size":2669,"mtime":1610319397427,"results":"13","hashOfConfig":"11"},{"size":2475,"mtime":1610430932304,"results":"14","hashOfConfig":"11"},{"size":3223,"mtime":1610251172114,"results":"15","hashOfConfig":"11"},{"size":5038,"mtime":1610430605225,"results":"16","hashOfConfig":"11"},{"size":934,"mtime":1610390409274,"results":"17","hashOfConfig":"11"},{"size":2169,"mtime":1610403997399,"results":"18","hashOfConfig":"11"},{"size":4644,"mtime":1610416518687,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15i8vgi",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/index.tsx",[],["41","42"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/App.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/login.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/home.tsx",["43"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/register.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/gallery.tsx",["44","45"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/modal.tsx",["46","47"],"import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Modal from '@material-ui/core/Modal';\nimport Container from '@material-ui/core/Container';\nimport '../stylesheets/modal.css';\nimport { Button } from '@material-ui/core';\n\nconst PhotoModal: React.FC<Props> = ({ modalImg, setModalImg, setEditModalImg}) => {\n    const handleClose = (e:any) => {\n        console.log(modalImg)\n        console.log(e)\n        if(e.target.classList.contains('MuiBackdrop-root')){\n            setModalImg(null)\n        }\n    }\n\n    return (\n        <Modal\n            open= {Boolean(modalImg)}\n            onClose={e => handleClose(e)}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps = {{\n                timeout: 500\n            }}\n        >\n            <div className=\"photo-modal\">\n                <header className=\"photo-modal-header\">\n                    <p className=\"profile\">\n                        <img src={modalImg.user.profile_image.small} className=\"profile-pic\"/>\n                        {`${modalImg.user.name}`}\n                    </p> \n                    <p>{modalImg.location ? (modalImg.location.name ? `Location: ${modalImg.location.name}` : '') : ''}</p> \n                </header>\n                <Container maxWidth=\"lg\" id=\"photo-modal-container\">\n                    <img src={modalImg.urls.regular} className=\"photo-modal-img\"/>\n                </Container>\n\n                <nav className=\"options-nav\">\n                    <p>{`${modalImg.likes} Likes`}</p> \n                    <p>{`${modalImg.downloads} Downloads`}</p> \n                    <Button onClick={()=>{\n                        setEditModalImg(modalImg)\n                        setModalImg(null)\n                    }}>\n                    Edit</Button>\n                </nav>\n\n                <p>{modalImg.description ? `Title: ${modalImg.description}` : ''}</p> \n                <p>{modalImg.alt_description ? `${modalImg.alt_description}` : ''}</p> \n            </div>\n        </Modal>\n    )\n}\n\ninterface Props {\n    modalImg: any,\n    setModalImg: any,\n    setEditModalImg: any,\n}\n\nexport default PhotoModal\n","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/edit_modal.tsx",["48"],"import React, { useState } from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Modal from '@material-ui/core/Modal';\nimport Container from '@material-ui/core/Container';\n// import Slider from '@material-ui/core/Slider'\nimport '../stylesheets/modal.css';\nimport '../stylesheets/edit_modal.css';\n\nconst DEFAULT_OPTIONS = [\n    {\n        name: 'BRIGHTNESS',\n        property: 'brightness',\n        value: 100,\n        range: {\n            min: 0,\n            max: 200,\n        },\n        unit: '%'\n\n    },\n    {\n        name: 'CONTRAST',\n        property: 'contrast',\n        value: 100,\n        range: {\n            min: 0,\n            max: 200,\n        },\n        unit: '%'\n\n    },\n    {\n        name: 'SATURATION',\n        property: 'saturate',\n        value: 100,\n        range: {\n            min: 0,\n            max: 200,\n        },\n        unit: '%'\n\n    },\n    {\n        name: 'GRAYSCALE',\n        property: 'grayscale',\n        value: 0,\n        range: {\n            min: 0,\n            max: 100,\n        },\n        unit: '%'\n\n    },\n    {\n        name: 'SEPIA',\n        property: 'sepia',\n        value: 0,\n        range: {\n            min: 0,\n            max: 100,\n        },\n        unit: '%'\n\n    },\n    {\n        name: 'HUE ROTATE',\n        property: 'hue-rotate',\n        value: 0,\n        range: {\n            min: 0,\n            max: 360,\n        },\n        unit: 'deg'\n\n    },\n    {\n        name: 'BLUR',\n        property: 'blur',\n        value: 0,\n        range: {\n            min: 0,\n            max: 20,\n        },\n        unit: 'px'\n\n    },\n]\n\nconst EditModal: React.FC<Props> = ({ editModalImg, setEditModalImg }) => {\n    const [options, setOptions] = useState<any>(DEFAULT_OPTIONS)\n\n    const handleClose = (e:any) => {\n        console.log(editModalImg)\n        console.log(e)\n        if(e.target.classList.contains('MuiBackdrop-root')){\n            setEditModalImg(null)\n        }\n    }\n\n    const handleChange = (e:any, selectedIdx:number) => {\n        setOptions((prevOptions:any) => {\n            let newOptions = prevOptions.map((op:any, opIdx:number) => {\n                if( opIdx !== selectedIdx ){\n                    return op\n                } else{\n                    return { ...op, value: e.target.value} \n                }\n            })\n            console.log(newOptions)\n            return newOptions\n        })\n    }\n\n    const getImageEdits = () => {\n        const filters = options.map( (op:any) => {\n            if(op.range.max === 200){\n                return `${op.property}(${op.value/op.range.max*2})`\n            }\n            else if( op.range.max === 100){\n                return `${op.property}(${op.value/op.range.max})`\n            }\n            else{\n                return `${op.property}(${op.value}${op.unit})`\n            }\n        })\n        return { filter: filters.join(\" \")}\n    }\n\n    console.log(getImageEdits())\n\n    return (\n        <Modal\n            open= {Boolean(editModalImg)}\n            onClose={e => handleClose(e)}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps = {{\n                timeout: 500\n            }}\n        >\n            <div className=\"photo-modal\">\n                <p className=\"edit-photo-title\">{`EDIT THIS IMAGE BY ${editModalImg.user.name.toUpperCase()}`}</p>\n                <Container maxWidth=\"lg\" id=\"photo-modal-container\">\n                    <img src={editModalImg.urls.regular} className=\"photo-modal-img\" style={getImageEdits()}/>\n                </Container>\n                <div className=\"filters\">\n                    {/* <Slider value = {0} /> */}\n                    {options.map((option:any, idx:number) =>{\n                        return (\n                            <div className=\"filter-option\">\n                                <input\n                                    type='range' \n                                    value={option.value} \n                                    onChange={e => handleChange(e, idx)}\n                                    min={option.range.min}\n                                    max={option.range.max}\n                                    name={option.name}\n                                    className=\"filter-slider\"\n                                    \n                                ></input>\n                                <p className=\"filter-label\">{option.name}</p>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div> \n        </Modal>\n    )\n}\n\ninterface Props {\n    editModalImg: any,\n    setEditModalImg: any\n}\n\nexport default EditModal\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":51,"column":8,"nodeType":"55","endLine":51,"endColumn":10,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":29,"column":8,"nodeType":"55","endLine":29,"endColumn":10,"suggestions":"58"},{"ruleId":"53","severity":1,"message":"59","line":36,"column":8,"nodeType":"55","endLine":36,"endColumn":22,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":30,"column":25,"nodeType":"63","endLine":30,"endColumn":95},{"ruleId":"61","severity":1,"message":"62","line":36,"column":21,"nodeType":"63","endLine":36,"endColumn":83},{"ruleId":"61","severity":1,"message":"62","line":144,"column":21,"nodeType":"63","endLine":144,"endColumn":111},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserLikes'. Either include it or remove the dependency array.","ArrayExpression",["66"],"React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.",["67"],"React Hook useEffect has missing dependencies: 'fetchSearchImages', 'isSearching', and 'newSearch'. Either include them or remove the dependency array.",["68"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [getUserLikes]",{"range":"75","text":"76"},"Update the dependencies array to be: [fetchImages]",{"range":"77","text":"78"},"Update the dependencies array to be: [fetchSearchImages, isSearching, newSearch, searchImages]",{"range":"79","text":"80"},[1608,1610],"[getUserLikes]",[1219,1221],"[fetchImages]",[1367,1381],"[fetchSearchImages, isSearching, newSearch, searchImages]"]