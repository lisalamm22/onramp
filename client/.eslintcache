[{"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/index.tsx":"1","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/App.tsx":"2","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/login.tsx":"3","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/home.tsx":"4","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/register.tsx":"5","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/gallery.tsx":"6","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search.tsx":"7","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/modal.tsx":"8","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/edit_modal.tsx":"9","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/random_page.tsx":"10","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search_results_page.tsx":"11","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/edits_page.tsx":"12","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/likes_page.tsx":"13","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/navbar.tsx":"14"},{"size":506,"mtime":1610225006095,"results":"15","hashOfConfig":"16"},{"size":1432,"mtime":1610488994522,"results":"17","hashOfConfig":"16"},{"size":3789,"mtime":1610515906194,"results":"18","hashOfConfig":"16"},{"size":3393,"mtime":1610519663596,"results":"19","hashOfConfig":"16"},{"size":4346,"mtime":1610515960612,"results":"20","hashOfConfig":"16"},{"size":3509,"mtime":1610511437988,"results":"21","hashOfConfig":"16"},{"size":934,"mtime":1610390409274,"results":"22","hashOfConfig":"16"},{"size":3713,"mtime":1610511134190,"results":"23","hashOfConfig":"16"},{"size":7062,"mtime":1610511745629,"results":"24","hashOfConfig":"16"},{"size":2069,"mtime":1610488936213,"results":"25","hashOfConfig":"16"},{"size":2844,"mtime":1610488886515,"results":"26","hashOfConfig":"16"},{"size":1193,"mtime":1610511710226,"results":"27","hashOfConfig":"16"},{"size":1125,"mtime":1610511505208,"results":"28","hashOfConfig":"16"},{"size":701,"mtime":1610519867710,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15i8vgi",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/index.tsx",[],["61","62"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/App.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/login.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/home.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/register.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/gallery.tsx",["63"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/modal.tsx",["64","65","66"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/edit_modal.tsx",["67","68","69"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/random_page.tsx",["70"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { LinearProgress } from '@material-ui/core';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport '../stylesheets/gallery.css'\n\nconst RandomPage: React.FC<Props> = ({setModalImg}) => {\n    const [images, setImages] = useState<any>([]);\n\n    useEffect(() => {\n        fetchImages();\n    }, [])\n\n    const unsplashAPI = \"https://api.unsplash.com\"\n    // const accessKey = process.env.UNSPLASH_ACCESS_KEY\n\n    const fetchImages = async () => {\n        const res = await axios\n            .get(`${unsplashAPI}/photos/random?client_id=DvjCg2G2B7CpZqGGEO0BJbxr6YpaOeuFt09A32zLnEY&count=10 `)\n        const fetchedImages = await res.data;\n        setImages([...images, ...fetchedImages])\n    }\n\n    return (\n        <InfiniteScroll\n            dataLength = {images.length}\n            next = {fetchImages}\n            hasMore = {true}\n            loader={<LinearProgress/>}\n        >\n            <GridList cellHeight={250} cols={3} spacing={15} >\n                {images.map((image:any,idx:number) => {\n                    return (\n                        <GridListTile key={idx}\n                        style={{ flexGrow: 1 }}\n                        cols = {(image.width/5000)}\n                        className='gallery-tile'\n                        onClick= {() => setModalImg(image)}>\n                            <img \n                                srcSet={`${image.urls.thumb}?w=161&fit=crop&auto=format 1x, \n                                ${image.urls.thumb}?w=161&fit=crop&auto=format&dpr=2 2x`}\n                                src={`${image.urls.thumb}`}\n                                alt={image.description || image.alt_description}\n                                />\n                    </GridListTile>\n                )})}\n            </GridList>\n        </InfiniteScroll>\n    )\n}\n\ninterface Props{\n    setModalImg: any,\n}\n\nexport default RandomPage","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search_results_page.tsx",["71"],"import { LinearProgress } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport '../stylesheets/gallery.css';\n\nconst SearchResultsPage: React.FC<Props> = ({setModalImg, \n    setNewSearch, \n    searchInput}) => {\n    const [searchImages, setSearchImages] = useState<any>([])\n    const [searchPage, setSearchPage] = useState<number>(1)\n\n    useEffect(() => {\n        setSearchImages([])\n        setSearchPage(1)\n        }, [searchInput])\n        \n    useEffect( () => {\n        if(searchImages.length === 0){\n            fetchSearchImages();  \n        }\n    },[searchImages])\n        \n        const unsplashAPI = \"https://api.unsplash.com\"\n        // const accessKey = process.env.UNSPLASH_ACCESS_KEY\n        \n    const fetchSearchImages = async () => {\n        setNewSearch(false)\n        if(searchInput !== ''){\n            const res = await axios\n                .get(`${unsplashAPI}/search/photos?page=${searchPage}&query=${searchInput}&client_id=DvjCg2G2B7CpZqGGEO0BJbxr6YpaOeuFt09A32zLnEY&per_page=20 `)\n            const searchRes = res.data.results\n            console.log(\"fetch results\", searchRes)\n            setSearchImages([...searchImages, ...searchRes])\n            let newPage = searchPage+1\n            setSearchPage(newPage)\n            console.log(\"next page is \", newPage)\n            console.log(searchImages)\n        }\n    }\n\n    return (\n        <InfiniteScroll\n            dataLength = {searchImages.length}\n            next = { fetchSearchImages }\n            hasMore = { true }\n            loader = { <LinearProgress/> }\n        >\n            <GridList cellHeight={250} cols={3} spacing={15} >\n                 {searchImages.map((image:any,idx:number) => {\n                     return (\n                         <GridListTile key={idx}\n                         style={{ flexGrow: 1 }}\n                         cols = {(image.width/5000)}\n                         className='gallery-tile'\n                         onClick= {() => setModalImg(image)}>\n                             <img \n                                 srcSet={`${image.urls.thumb}?w=161&fit=crop&auto=format 1x, \n                                 ${image.urls.thumb}?w=161&fit=crop&auto=format&dpr=2 2x`}\n                                 src={`${image.urls.thumb}`}\n                                 alt={image.description || image.alt_description}\n                                 />\n                     </GridListTile>\n                 )})}\n             </GridList>\n        </InfiniteScroll>\n    )\n}\n\ninterface Props {\n    setNewSearch: any,\n    searchInput: any,\n    setModalImg: any,\n}\n\nexport default SearchResultsPage\n","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/edits_page.tsx",["72"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/likes_page.tsx",["73"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/navbar.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":35,"column":8,"nodeType":"80","endLine":35,"endColumn":19,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":19,"column":8,"nodeType":"80","endLine":19,"endColumn":10,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":64,"column":21,"nodeType":"86","endLine":64,"endColumn":91},{"ruleId":"84","severity":1,"message":"85","line":71,"column":21,"nodeType":"86","endLine":71,"endColumn":83},{"ruleId":"78","severity":1,"message":"87","line":104,"column":8,"nodeType":"80","endLine":104,"endColumn":10,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"85","line":208,"column":21,"nodeType":"86","endLine":208,"endColumn":95},{"ruleId":"84","severity":1,"message":"85","line":212,"column":21,"nodeType":"86","endLine":212,"endColumn":111},{"ruleId":"78","severity":1,"message":"89","line":14,"column":8,"nodeType":"80","endLine":14,"endColumn":10,"suggestions":"90"},{"ruleId":"78","severity":1,"message":"91","line":24,"column":7,"nodeType":"80","endLine":24,"endColumn":21,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"85","line":17,"column":29,"nodeType":"86","endLine":21,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":17,"column":29,"nodeType":"86","endLine":20,"endColumn":31},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSearchImages'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has missing dependencies: 'likes' and 'modalImg.id'. Either include them or remove the dependency array.",["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'editModalImg.id' and 'likes'. Either include them or remove the dependency array.",["97"],"React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has a missing dependency: 'fetchSearchImages'. Either include it or remove the dependency array.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [getSearchImages, newSearch]",{"range":"110","text":"111"},"Update the dependencies array to be: [likes, modalImg.id]",{"range":"112","text":"113"},"Update the dependencies array to be: [editModalImg.id, likes]",{"range":"114","text":"115"},"Update the dependencies array to be: [fetchImages]",{"range":"116","text":"117"},"Update the dependencies array to be: [fetchSearchImages, searchImages]",{"range":"118","text":"119"},[1364,1375],"[getSearchImages, newSearch]",[809,811],"[likes, modalImg.id]",[2214,2216],"[editModalImg.id, likes]",[499,501],"[fetchImages]",[788,802],"[fetchSearchImages, searchImages]"]