[{"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/index.tsx":"1","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/App.tsx":"2","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/login.tsx":"3","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/home.tsx":"4","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/register.tsx":"5","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/gallery.tsx":"6","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search.tsx":"7","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/modal.tsx":"8","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/edit_modal.tsx":"9","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/random_page.tsx":"10","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search_results_page.tsx":"11"},{"size":506,"mtime":1610225006095,"results":"12","hashOfConfig":"13"},{"size":1432,"mtime":1610488994522,"results":"14","hashOfConfig":"13"},{"size":2669,"mtime":1610319397427,"results":"15","hashOfConfig":"13"},{"size":3397,"mtime":1610491055994,"results":"16","hashOfConfig":"13"},{"size":3223,"mtime":1610251172114,"results":"17","hashOfConfig":"13"},{"size":2249,"mtime":1610489244151,"results":"18","hashOfConfig":"13"},{"size":934,"mtime":1610390409274,"results":"19","hashOfConfig":"13"},{"size":3361,"mtime":1610437545191,"results":"20","hashOfConfig":"13"},{"size":6714,"mtime":1610491042964,"results":"21","hashOfConfig":"13"},{"size":2069,"mtime":1610488936213,"results":"22","hashOfConfig":"13"},{"size":2844,"mtime":1610488886515,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"15i8vgi",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/index.tsx",[],["48","49"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/App.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/login.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/home.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/register.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/gallery.tsx",["50"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search.tsx",[],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/modal.tsx",["51","52","53"],"import React, {useState, useEffect} from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Modal from '@material-ui/core/Modal';\nimport Container from '@material-ui/core/Container';\nimport '../stylesheets/modal.css';\nimport { Button } from '@material-ui/core';\n\nconst PhotoModal: React.FC<Props> = ({ modalImg, setModalImg, setEditModalImg, likes, setLikes}) => {\n    const [likeButton, setLikeButton] = useState<any>(<Button onClick={() => {handleLike(modalImg.id)}}>Like Button</Button>)\n\n    useEffect(() => {\n        if(likes.includes(modalImg.id)){\n            setLikeButton(<Button>Cannot Like</Button>)\n        }\n    }, [])\n    \n    const handleClose = (e:any) => {\n        if(e.target.classList.contains('MuiBackdrop-root')){\n            setModalImg(null)\n        }\n    }\n\n    async function postLike(image_id:string) {\n        try{\n            const body = {\n                image: image_id,\n            }\n            await fetch('/user/likes', {\n                method: 'POST',\n                headers: { \n                    token: localStorage.token,\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(body)\n            })\n        } catch(error){\n            console.error(error.message)\n        }\n    }\n\n    const handleLike = (image_id:string) => {\n        console.log(likes)\n        postLike(image_id);\n        setLikes([]);\n        setLikeButton(<Button>Cannot Like</Button>)\n    }\n\n    return (\n        <Modal\n            open= {Boolean(modalImg)}\n            onClose={e => handleClose(e)}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps = {{\n                timeout: 500\n            }}\n        >\n            <div className=\"photo-modal\">\n                <header className=\"photo-modal-header\">\n                    <p className=\"profile\">\n                        <img src={modalImg.user.profile_image.small} className=\"profile-pic\"/>\n                        {`${modalImg.user.name}`}\n                    </p> \n                    <p>{modalImg.location ? (modalImg.location.name ? `Location: ${modalImg.location.name}` : '') : ''}</p> \n                </header>\n                <Container maxWidth=\"lg\" id=\"photo-modal-container\">\n                    <img src={modalImg.urls.regular} className=\"photo-modal-img\"/>\n                </Container>\n\n                <nav className=\"options-nav\">\n                    {/* {likes.includes(modalImg.id) ? <Button>Cannot Like</Button> :\n                        <Button onClick={() => {handleLike(modalImg.id)}}>Like Button</Button>} */}\n                    {likeButton}\n                    <p>{`${modalImg.likes} Likes`}</p> \n                    <p>{`${modalImg.downloads} Downloads`}</p> \n                    <Button onClick={()=>{\n                        setEditModalImg(modalImg)\n                        setModalImg(null)\n                    }}>\n                    Edit</Button>\n                </nav>\n\n                <p>{modalImg.description ? `Title: ${modalImg.description}` : ''}</p> \n                <p>{modalImg.alt_description ? `${modalImg.alt_description}` : ''}</p> \n            </div>\n        </Modal>\n    )\n}\n\ninterface Props {\n    modalImg: any,\n    setModalImg: any,\n    setEditModalImg: any,\n    likes: any,\n    setLikes: any,\n}\n\nexport default PhotoModal\n","/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/edit_modal.tsx",["54","55"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/random_page.tsx",["56"],"/Users/lisalam/Desktop/onramp-fullstack-project-main 4/client/src/components/search_results_page.tsx",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":32,"column":8,"nodeType":"64","endLine":32,"endColumn":19,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":15,"column":8,"nodeType":"64","endLine":15,"endColumn":10,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":61,"column":25,"nodeType":"70","endLine":61,"endColumn":95},{"ruleId":"68","severity":1,"message":"69","line":67,"column":21,"nodeType":"70","endLine":67,"endColumn":83},{"ruleId":"62","severity":1,"message":"71","line":107,"column":8,"nodeType":"64","endLine":107,"endColumn":10,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"69","line":208,"column":21,"nodeType":"70","endLine":208,"endColumn":111},{"ruleId":"62","severity":1,"message":"73","line":14,"column":8,"nodeType":"64","endLine":14,"endColumn":10,"suggestions":"74"},{"ruleId":"62","severity":1,"message":"75","line":24,"column":7,"nodeType":"64","endLine":24,"endColumn":21,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSearchImages'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has missing dependencies: 'likes' and 'modalImg.id'. Either include them or remove the dependency array.",["80"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'editModalImg.id' and 'likes'. Either include them or remove the dependency array.",["81"],"React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.",["82"],"React Hook useEffect has a missing dependency: 'fetchSearchImages'. Either include it or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [getSearchImages, newSearch]",{"range":"94","text":"95"},"Update the dependencies array to be: [likes, modalImg.id]",{"range":"96","text":"97"},"Update the dependencies array to be: [editModalImg.id, likes]",{"range":"98","text":"99"},"Update the dependencies array to be: [fetchImages]",{"range":"100","text":"101"},"Update the dependencies array to be: [fetchSearchImages, searchImages]",{"range":"102","text":"103"},[1187,1198],"[getSearchImages, newSearch]",[644,646],"[likes, modalImg.id]",[2315,2317],"[editModalImg.id, likes]",[499,501],"[fetchImages]",[788,802],"[fetchSearchImages, searchImages]"]